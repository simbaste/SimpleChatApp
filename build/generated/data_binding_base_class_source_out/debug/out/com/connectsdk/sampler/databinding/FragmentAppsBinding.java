// Generated by view binder compiler. Do not edit!
package com.connectsdk.sampler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.connectsdk.sampler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAppsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListView appListView;

  @NonNull
  public final Button appStoreButton;

  @NonNull
  public final Button browserButton;

  @NonNull
  public final Button deepLinkButton;

  @NonNull
  public final Button myApp;

  @NonNull
  public final Button toastButton;

  @NonNull
  public final Button youtubeButton;

  private FragmentAppsBinding(@NonNull LinearLayout rootView, @NonNull ListView appListView,
      @NonNull Button appStoreButton, @NonNull Button browserButton, @NonNull Button deepLinkButton,
      @NonNull Button myApp, @NonNull Button toastButton, @NonNull Button youtubeButton) {
    this.rootView = rootView;
    this.appListView = appListView;
    this.appStoreButton = appStoreButton;
    this.browserButton = browserButton;
    this.deepLinkButton = deepLinkButton;
    this.myApp = myApp;
    this.toastButton = toastButton;
    this.youtubeButton = youtubeButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAppsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAppsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_apps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAppsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appListView;
      ListView appListView = ViewBindings.findChildViewById(rootView, id);
      if (appListView == null) {
        break missingId;
      }

      id = R.id.appStoreButton;
      Button appStoreButton = ViewBindings.findChildViewById(rootView, id);
      if (appStoreButton == null) {
        break missingId;
      }

      id = R.id.browserButton;
      Button browserButton = ViewBindings.findChildViewById(rootView, id);
      if (browserButton == null) {
        break missingId;
      }

      id = R.id.deepLinkButton;
      Button deepLinkButton = ViewBindings.findChildViewById(rootView, id);
      if (deepLinkButton == null) {
        break missingId;
      }

      id = R.id.myApp;
      Button myApp = ViewBindings.findChildViewById(rootView, id);
      if (myApp == null) {
        break missingId;
      }

      id = R.id.toastButton;
      Button toastButton = ViewBindings.findChildViewById(rootView, id);
      if (toastButton == null) {
        break missingId;
      }

      id = R.id.youtubeButton;
      Button youtubeButton = ViewBindings.findChildViewById(rootView, id);
      if (youtubeButton == null) {
        break missingId;
      }

      return new FragmentAppsBinding((LinearLayout) rootView, appListView, appStoreButton,
          browserButton, deepLinkButton, myApp, toastButton, youtubeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
