// Generated by view binder compiler. Do not edit!
package com.connectsdk.sampler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.SeekBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.connectsdk.sampler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSystemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button fastForwardButton;

  @NonNull
  public final ListView inputListView;

  @NonNull
  public final Button inputPickerButton;

  @NonNull
  public final CheckBox muteToggle;

  @NonNull
  public final Button pauseButton;

  @NonNull
  public final Button playButton;

  @NonNull
  public final Button rewindButton;

  @NonNull
  public final Button stopButton;

  @NonNull
  public final Button volumeDownButton;

  @NonNull
  public final SeekBar volumeSlider;

  @NonNull
  public final Button volumeUpButton;

  private FragmentSystemBinding(@NonNull LinearLayout rootView, @NonNull Button fastForwardButton,
      @NonNull ListView inputListView, @NonNull Button inputPickerButton,
      @NonNull CheckBox muteToggle, @NonNull Button pauseButton, @NonNull Button playButton,
      @NonNull Button rewindButton, @NonNull Button stopButton, @NonNull Button volumeDownButton,
      @NonNull SeekBar volumeSlider, @NonNull Button volumeUpButton) {
    this.rootView = rootView;
    this.fastForwardButton = fastForwardButton;
    this.inputListView = inputListView;
    this.inputPickerButton = inputPickerButton;
    this.muteToggle = muteToggle;
    this.pauseButton = pauseButton;
    this.playButton = playButton;
    this.rewindButton = rewindButton;
    this.stopButton = stopButton;
    this.volumeDownButton = volumeDownButton;
    this.volumeSlider = volumeSlider;
    this.volumeUpButton = volumeUpButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSystemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSystemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_system, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSystemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fastForwardButton;
      Button fastForwardButton = ViewBindings.findChildViewById(rootView, id);
      if (fastForwardButton == null) {
        break missingId;
      }

      id = R.id.inputListView;
      ListView inputListView = ViewBindings.findChildViewById(rootView, id);
      if (inputListView == null) {
        break missingId;
      }

      id = R.id.inputPickerButton;
      Button inputPickerButton = ViewBindings.findChildViewById(rootView, id);
      if (inputPickerButton == null) {
        break missingId;
      }

      id = R.id.muteToggle;
      CheckBox muteToggle = ViewBindings.findChildViewById(rootView, id);
      if (muteToggle == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      Button pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.playButton;
      Button playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.rewindButton;
      Button rewindButton = ViewBindings.findChildViewById(rootView, id);
      if (rewindButton == null) {
        break missingId;
      }

      id = R.id.stopButton;
      Button stopButton = ViewBindings.findChildViewById(rootView, id);
      if (stopButton == null) {
        break missingId;
      }

      id = R.id.volumeDownButton;
      Button volumeDownButton = ViewBindings.findChildViewById(rootView, id);
      if (volumeDownButton == null) {
        break missingId;
      }

      id = R.id.volumeSlider;
      SeekBar volumeSlider = ViewBindings.findChildViewById(rootView, id);
      if (volumeSlider == null) {
        break missingId;
      }

      id = R.id.volumeUpButton;
      Button volumeUpButton = ViewBindings.findChildViewById(rootView, id);
      if (volumeUpButton == null) {
        break missingId;
      }

      return new FragmentSystemBinding((LinearLayout) rootView, fastForwardButton, inputListView,
          inputPickerButton, muteToggle, pauseButton, playButton, rewindButton, stopButton,
          volumeDownButton, volumeSlider, volumeUpButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
