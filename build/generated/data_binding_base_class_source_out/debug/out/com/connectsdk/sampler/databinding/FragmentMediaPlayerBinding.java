// Generated by view binder compiler. Do not edit!
package com.connectsdk.sampler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.connectsdk.sampler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMediaPlayerBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button audioButton;

  @NonNull
  public final Button closeButton;

  @NonNull
  public final Button fastForwardButton;

  @NonNull
  public final Button jumpButton;

  @NonNull
  public final CheckBox loopingButton;

  @NonNull
  public final Button mediaInfoButton;

  @NonNull
  public final ImageView mediaInfoImageView;

  @NonNull
  public final TextView mediaInfoTextView;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Button pauseButton;

  @NonNull
  public final Button photoButton;

  @NonNull
  public final Button playButton;

  @NonNull
  public final Button playlistButton;

  @NonNull
  public final EditText positionText;

  @NonNull
  public final Button previousButton;

  @NonNull
  public final Button rewindButton;

  @NonNull
  public final Button stopButton;

  @NonNull
  public final TextView streamDuration;

  @NonNull
  public final TextView streamPosition;

  @NonNull
  public final SeekBar streamSeekBar;

  @NonNull
  public final CheckBox subtitlesButton;

  @NonNull
  public final Button videoButton;

  @NonNull
  public final SeekBar volumeSeekBar;

  private FragmentMediaPlayerBinding(@NonNull ScrollView rootView, @NonNull Button audioButton,
      @NonNull Button closeButton, @NonNull Button fastForwardButton, @NonNull Button jumpButton,
      @NonNull CheckBox loopingButton, @NonNull Button mediaInfoButton,
      @NonNull ImageView mediaInfoImageView, @NonNull TextView mediaInfoTextView,
      @NonNull Button nextButton, @NonNull Button pauseButton, @NonNull Button photoButton,
      @NonNull Button playButton, @NonNull Button playlistButton, @NonNull EditText positionText,
      @NonNull Button previousButton, @NonNull Button rewindButton, @NonNull Button stopButton,
      @NonNull TextView streamDuration, @NonNull TextView streamPosition,
      @NonNull SeekBar streamSeekBar, @NonNull CheckBox subtitlesButton,
      @NonNull Button videoButton, @NonNull SeekBar volumeSeekBar) {
    this.rootView = rootView;
    this.audioButton = audioButton;
    this.closeButton = closeButton;
    this.fastForwardButton = fastForwardButton;
    this.jumpButton = jumpButton;
    this.loopingButton = loopingButton;
    this.mediaInfoButton = mediaInfoButton;
    this.mediaInfoImageView = mediaInfoImageView;
    this.mediaInfoTextView = mediaInfoTextView;
    this.nextButton = nextButton;
    this.pauseButton = pauseButton;
    this.photoButton = photoButton;
    this.playButton = playButton;
    this.playlistButton = playlistButton;
    this.positionText = positionText;
    this.previousButton = previousButton;
    this.rewindButton = rewindButton;
    this.stopButton = stopButton;
    this.streamDuration = streamDuration;
    this.streamPosition = streamPosition;
    this.streamSeekBar = streamSeekBar;
    this.subtitlesButton = subtitlesButton;
    this.videoButton = videoButton;
    this.volumeSeekBar = volumeSeekBar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMediaPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMediaPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_media_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMediaPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audioButton;
      Button audioButton = ViewBindings.findChildViewById(rootView, id);
      if (audioButton == null) {
        break missingId;
      }

      id = R.id.closeButton;
      Button closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.fastForwardButton;
      Button fastForwardButton = ViewBindings.findChildViewById(rootView, id);
      if (fastForwardButton == null) {
        break missingId;
      }

      id = R.id.jumpButton;
      Button jumpButton = ViewBindings.findChildViewById(rootView, id);
      if (jumpButton == null) {
        break missingId;
      }

      id = R.id.loopingButton;
      CheckBox loopingButton = ViewBindings.findChildViewById(rootView, id);
      if (loopingButton == null) {
        break missingId;
      }

      id = R.id.mediaInfo_button;
      Button mediaInfoButton = ViewBindings.findChildViewById(rootView, id);
      if (mediaInfoButton == null) {
        break missingId;
      }

      id = R.id.mediaInfo_imageView;
      ImageView mediaInfoImageView = ViewBindings.findChildViewById(rootView, id);
      if (mediaInfoImageView == null) {
        break missingId;
      }

      id = R.id.mediaInfo_textView;
      TextView mediaInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (mediaInfoTextView == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      Button pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.photoButton;
      Button photoButton = ViewBindings.findChildViewById(rootView, id);
      if (photoButton == null) {
        break missingId;
      }

      id = R.id.playButton;
      Button playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.playlistButton;
      Button playlistButton = ViewBindings.findChildViewById(rootView, id);
      if (playlistButton == null) {
        break missingId;
      }

      id = R.id.positionText;
      EditText positionText = ViewBindings.findChildViewById(rootView, id);
      if (positionText == null) {
        break missingId;
      }

      id = R.id.previousButton;
      Button previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.rewindButton;
      Button rewindButton = ViewBindings.findChildViewById(rootView, id);
      if (rewindButton == null) {
        break missingId;
      }

      id = R.id.stopButton;
      Button stopButton = ViewBindings.findChildViewById(rootView, id);
      if (stopButton == null) {
        break missingId;
      }

      id = R.id.stream_duration;
      TextView streamDuration = ViewBindings.findChildViewById(rootView, id);
      if (streamDuration == null) {
        break missingId;
      }

      id = R.id.stream_position;
      TextView streamPosition = ViewBindings.findChildViewById(rootView, id);
      if (streamPosition == null) {
        break missingId;
      }

      id = R.id.stream_seek_bar;
      SeekBar streamSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (streamSeekBar == null) {
        break missingId;
      }

      id = R.id.subtitlesButton;
      CheckBox subtitlesButton = ViewBindings.findChildViewById(rootView, id);
      if (subtitlesButton == null) {
        break missingId;
      }

      id = R.id.videoButton;
      Button videoButton = ViewBindings.findChildViewById(rootView, id);
      if (videoButton == null) {
        break missingId;
      }

      id = R.id.volume_seek_bar;
      SeekBar volumeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (volumeSeekBar == null) {
        break missingId;
      }

      return new FragmentMediaPlayerBinding((ScrollView) rootView, audioButton, closeButton,
          fastForwardButton, jumpButton, loopingButton, mediaInfoButton, mediaInfoImageView,
          mediaInfoTextView, nextButton, pauseButton, photoButton, playButton, playlistButton,
          positionText, previousButton, rewindButton, stopButton, streamDuration, streamPosition,
          streamSeekBar, subtitlesButton, videoButton, volumeSeekBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
